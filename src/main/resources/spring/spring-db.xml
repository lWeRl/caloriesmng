<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:component-scan base-package="org.lwerl.caloriesmng.util"/>
    <!--Init database when Spring load context-->
    <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">
        <jdbc:script location="classpath:db/${jdbc.initLocation}"/>
        <jdbc:script location="classpath:db/populate.sql"/>
    </jdbc:initialize-database>

    <beans profile="hsqldb">
        <context:property-placeholder location="classpath:db/hsqldb.properties" system-properties-mode="OVERRIDE"/>

        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="${database.driverClassName}"/>
            <property name="url" value="${database.url}"/>
            <property name="username" value="${database.username}"/>
            <property name="password" value="${database.password}"/>
        </bean>
    </beans>

    <beans profile="postgres">

        <context:property-placeholder location="classpath:db/postgres.properties" system-properties-mode="OVERRIDE"/>

        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
            <property name="driverClassName" value="${database.driverClassName}"/>
            <property name="url" value="${database.url}"/>
            <property name="username" value="${database.username}"/>
            <property name="password" value="${database.password}"/>
        </bean>
    </beans>

    <beans profile="heroku">
        <context:property-placeholder location="classpath:/db/heroku.properties" system-properties-mode="OVERRIDE"/>

        <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="${DATABASE_URL}"/>
        </bean>
        <bean id="dataSource"
              class="org.apache.tomcat.jdbc.pool.DataSource"
              p:url="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"
              p:username="#{ @dbUrl.getUserInfo().split(':')[0] }"
              p:password="#{ @dbUrl.getUserInfo().split(':')[1] }"
              p:driverClassName="org.postgresql.Driver"/>
              <!--p:validationQuery="SELECT 1 FROM users"-->
              <!--p:maxActive="5"-->
              <!--p:minIdle="1"-->
              <!--p:maxWait="20000"-->
              <!--p:initialSize="2"-->
              <!--p:maxIdle="5"-->
              <!--p:testOnBorrow="true"-->
              <!--p:removeAbandoned="true"-->
              <!--p:testOnConnect="true"-->
              <!--p:testWhileIdle="true"-->
    </beans>

    <beans profile="jdbc">
        <!--JDBC Template-->
        <context:component-scan base-package="org.lwerl.caloriesmng.repository.jdbc"/>

        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>
        <bean id="namedParameterJdbcTemplate"
              class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>
        <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource"/>
        </bean>
    </beans>
    <beans profile="jpa , datajpa">

        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource"
              p:packagesToScan="org.lwerl.caloriesmng.model">
            <property name="jpaPropertyMap">
                <map>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}"
                           value="${hibernate.use_sql_comments}"/>
                    <!--AutoGenerate base from Entity-->
                    <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="${hibernate.hbm2ddl.auto}"/>-->
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}"
                           value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}" value="true"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_QUERY_CACHE}"
                           value="false"/> <!--default-->
                    <entry key="#{T(org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory).NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME}"
                           value="cache/ehcache.xml"/>
                </map>
            </property>
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
                <!--p:showSql="${jpa.showSql}"-->
                <!--p:databasePlatform="org.hibernate.dialect.PostgreSQL9Dialect"-->
                <!--/>-->
            </property>
        </bean>

        <!--@Transaction annotation support -->
        <tx:annotation-driven transaction-manager="transactionManager"/>

        <!--Transaction manager-->
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
            <property name="entityManagerFactory" ref="entityManagerFactory"/>
        </bean>
    </beans>
    <beans profile="datajpa">
        <context:component-scan base-package="org.lwerl.caloriesmng.repository.datajpa"/>
        <!-- Сканируем на выражения для Data Jpa-->
        <jpa:repositories base-package="org.lwerl.caloriesmng.repository.datajpa"/>
    </beans>
    <beans profile="jpa">
        <context:component-scan base-package="org.lwerl.caloriesmng.repository.jpa"/>
    </beans>
</beans>